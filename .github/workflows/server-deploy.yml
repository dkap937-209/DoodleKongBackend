name: Deploy Doodlekong Backend

on:
  push:
    branches: [ "master" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30  # Prevent timeout during long builds
    steps:
      # Step 1: Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Configure SSH with keepalive
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          ssh-keyscan ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      # Step 3: Sync project files
      - name: Sync project files
        run: |
          rsync -avz --delete \
            -e "ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no -o ServerAliveInterval=60" \
            ./ ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:/home/${{ secrets.SERVER_USER }}/doodlekong_backend/

      # Step 4: Build and run Docker container
      - name: Deploy Docker container
        run: |
          ssh -i ~/.ssh/deploy_key \
            -o StrictHostKeyChecking=no \
            ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
          cd /home/${{ secrets.SERVER_USER }}/doodlekong_backend
      
          # 1. Ensure we're using classic builder
          export DOCKER_BUILDKIT=0
      
          # 2. Build with verbose output
          docker build \
            --no-cache \
            -t doodlekong-backend . \
            | tee build.log || (cat build.log && exit 1)
      
          # 3. Only proceed if build succeeded
          if docker inspect doodlekong-backend &>/dev/null; then
            # Cleanup old container if exists
            docker stop doodlekong-backend || true
            docker rm doodlekong-backend || true
            
            # Run new container
            docker run -d \
              --name doodlekong-backend \
              --restart unless-stopped \
              -p 8080:8080 \
              doodlekong-backend
          else
            echo "‚ùå Docker build failed - check build.log"
            exit 1
          fi
          EOF
