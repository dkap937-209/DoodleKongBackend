name: Deploy Doodlekong Backend

on:
  push:
    branches: [ "master" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30  # Prevent timeout during long builds
    steps:
      # Step 1: Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Configure SSH with keepalive
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          ssh-keyscan ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      # Step 3: Sync project files
      - name: Sync project files
        run: |
          rsync -avz --delete \
            -e "ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no -o ServerAliveInterval=60" \
            ./ ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }}:/home/${{ secrets.SERVER_USER }}/doodlekong_backend/

      # Step 4: Build and run Docker container
      - name: Deploy Docker container
        run: |
          ssh -i ~/.ssh/deploy_key \
            -o StrictHostKeyChecking=no \
            -o ServerAliveInterval=15 \
            -o TCPKeepAlive=yes \
            ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
          cd /home/${{ secrets.SERVER_USER }}/doodlekong_backend
          
          # Disable problematic Gradle/Kotlin features
          echo "kotlin.incremental.useClasspathSnapshot=false" >> gradle.properties
          echo "org.gradle.caching=false" >> gradle.properties
          echo "org.gradle.configureondemand=false" >> gradle.properties
          
          # Build with verbose output and no cache
          DOCKER_BUILDKIT=0 docker build \
            --no-cache \
            --progress=plain \
            -t doodlekong-backend . 2>&1 | tee docker-build.log
          
          # Verify image was created
          if ! docker inspect doodlekong-backend &>/dev/null; then
            echo "‚ùå Docker build failed - see docker-build.log"
            cat docker-build.log
            exit 1
          fi
          
          # Container management
          docker stop doodlekong-backend || true
          docker rm doodlekong-backend || true
          docker run -d \
            --name doodlekong-backend \
            --restart unless-stopped \
            -p 8080:8080 \
            doodlekong-backend
          EOF
